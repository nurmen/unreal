In a hidden Markov model, a sequence (e.g. a protein sequence, or a DNA sequence) is
modeled as an output generated by a stochastic process progressing through discrete time
steps. At each time step, the process outputs a symbol (e.g. an amino acid or a nucleotide)
and moves from one of a finite number of states to another. Thus similarly to a Markov
process, an HMM is described by a set of states and a transition probabilities matrix defining
the probability of moving from one state to another.


requires an emission probability matrix defining the probability of emitting a given character
at a given state. The adjective “hidden” refers to the fact that, in contrast to a Markov
process, the outcome of the statistical process modeled by an HMM is the sequence of
symbols generated and not the path of states followed by the process.


While designing an HMM for a biological sequence family, we typically start with a set
of related sequences. The topology of the model is usually designed manually based on
the understanding of the modeled family, while the parameters of the model are adjusted
automatically to maximize the probability of generating the input set of sequences.

The process of adjusting the parameters
is called the training process and the set of input sequences is called the training set.

Since a HMM generates various sequences with various probabilities it defines a probability
distribution over sequences of symbols from Σ. Thus the idea behind an HMM that
models a particular sequence family is to design the model in such a way that it generates the
sequences in the family with a relatively high probability while the probability of generating
an unrelated sequence is relatively low.



Computing P[S|M] directly from the definition (??) is not feasible due to an exponential
number of possible paths (compare also the list in Table ??). Fortunately, the problem
admits a dynamic programming formulation.



Signatures overview.

Signature is a behavioral trait of an indivudal and forms a special class of handwriting in which legible letters or words may not be exhibited. Fepending on the hardware front-end, a signature verification system can be classified as either offline or online. Oflline signature recognition is performed after the writing is complete.

The data is captured at a later time by using an optical scanner to convert the image into a bit pattern. The features thus extracted are said to be static.

Onine signature recognition, in contrat, means that the machine recognizes the handwriting as the user writes. It requires a transduces that captures the signature as it is written and hence the features are dynamic in nature.

in this blblbl the signature verification system incorporates : noise removale pre-processing, feature extraction, learning and verification modules....



Introduction to signature based verification system

A signature is treated as an image carrying a certain pattern of pixels that pertains to a specific individual. Signature verification problem, therefore, is concerned with examining and determining wether a particular signature "truly" belongs to a person or not. Signatures are a special case of handwriting in which special characters and flourishes are viable.

Signature verification is a different pattern recognition problem as no two genuine signatures of a person are "precisely" the same. The difficulty also stems from the fact that the skilled forgeries follow the genuine pattern unlike fingerprints or irises which vary widely for two different persons. Ideally, interpersonal variation should be much more than intrapersonal variation. Therefore, it is important to identify those features which minimize the intrapersonal variation and maximize interpersona lvariations. The key factor is to differentiate between the parts of the signature that are habitual and those that vary with almost every signature.

Disadvantages include problems of long-term reliability, lack of accuracy and cost.


SVS can be classified in offline svs and online svs.

In offline svs, only static features are condidered, whereas in case of online svs, dynamic features are taken into consideration.

Dynamic features include the time that the stylus is in and out of contact with th paper, the total time taken to make the signature and the position where the stylus is raised from and lowered onto the paper, number of breakpoints, maximum/mninimum pressure of stylus contact, speed, direction at crucial points.


Motivation and problem statement

Due to the relative ease of use of an offline system, a number of applications worldwide prefer to use this system (e.g. cheque verification for a bank).

Online signature recognition systems are more reliable (closer to 99%) as compared to offline systems in terms of accuracy. However, online methods require some special hardware like digitizers, pressure sensitive tablets to capture the dynamic features, which the offline methods do not require.

Bakcground and related work

Signatures form a special class of handwriting in which legible letters or words may not be exhibited. They provide secure means for authentication, attestation and authorization in legal, banking or other high security environments. Signature verification problem pertains to determining where a particular signature is verily written by a person so that forgeries can be detected.


A comprensive survey on online and offline handwriting recognition has been done by Plamodon.

Offline svs: the static information derived from such signatures is used for matchig and decision making.

A lot of work has been done in developing offline svs and recognition systems with variations in feature extraction and matching. Geometric feature extraction with neural network classifier has been used..



Distance based classifier explanation

In this paper we present an off-line signature verification and recognition system based on a combination of features extracted such as global features, mask features and grid features. The system is trained using a database of signatures. For each person, a centroid feature vector is obtained from a set of his/her genuine samples using the features that were extracted. The centroid signature is then used as a template which is used to verify a claimed signature. To obtain a satisfactory measure of similarity between template (mean) signature and the claimed signature, we use the Euclidean distance in the feature space.


Offline svs deals with analyzing images of a person's signature. Offline signature verification is more difficult as you do not have real time data to work with and that real time
data is what makes each person unique.

More
features can be extracted during On-line mode such
as time, pressure and speed [1]. Such features are
impossible to extract from a static image of a
signature

Furthermore, in Off-line mode, it is
difficult to segment signature strokes due to highly
stylish and unconventional writing styles. All of these
difficulties combined cause large intra-personal
variation among signatures.


It has been
used in authentication documents and for enforcing
binding contracts in paper based documents for
centuries.

In order for us to be able to perform verification of
signatures, there are several steps that need to be
completed first. The first step is pre-processing and in
this step the image is converted from a bmp and into
a binary image which makes the feature extraction
simpler. Once the image is binarised, we begin our
feature extraction phase of the signature. These
features are combined to form our template for
comparison with test signatures. Verification is then
performed using the Euclidean distance to obtain a
measure of similarity between the claimed signature
and the template signature.  [figure 1 scahferViriri.pdf]